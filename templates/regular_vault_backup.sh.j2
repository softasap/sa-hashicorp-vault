#!/bin/bash
#
# Add to cron - daily at 01:00 AM
# 0 1 * * * /opt/vault/regular_vault_backup.sh > /dev/null
# returns 0 in case of success and 1 in case of failure

# Requires external tool s3cmd preconfigured for current user
# Dependency: sudo apt-get install s3cmd


NUMBER_OF_BACKUPS_TO_KEEP=10
S3_BUCKETNAME=
VAULT_HOME=/opt/vault
RESTORE_SCRIPT_PATH="$PWD/vault_restore_template.sh"

#BACKUP_PATH="/path/to/backup/directory" # do not include trailing slash
BACKUP_PATH="/opt/vault/vault_backups"
#
FILE_NAME="DATE" #defaults to [currentdate].tar.gz ex: 2011-12-19_hh-mm.tar.gz

TAR_BIN_PATH="$(which tar)"

# Get todays date to use in filename of backup output
TODAYS_DATE=`date "+%Y-%m-%d"`
TODAYS_DATETIME=`date "+%Y-%m-%d_%H-%M-%S"`

# replace DATE with todays date in the backup path
BACKUP_PATH="${BACKUP_PATH//DATE/$TODAYS_DATETIME}"

# Create BACKUP_PATH directory if it does not exist
[ ! -d $BACKUP_PATH ] && mkdir -p $BACKUP_PATH || :

# Ensure directory exists before dumping to it
if [ -d "$BACKUP_PATH" ]; then

	cd $BACKUP_PATH

	# initialize temp backup directory
	TMP_BACKUP_DIR="$BACKUP_PATH/vault-$TODAYS_DATE"

  ### Print out what we shall do
  echo "Starting Vault backup on `hostname -s` at `date +'%d-%b-%Y %H:%M:%S %Z'`"

  ### Create backup directories
  mkdir -p "${TMP_BACKUP_DIR}/storage"

  ### Backup $VAULT_HOME/*.hcl
  echo -n "Backing up ${VAULT_HOME}/*.hcl... "
  hcl_count=$(find ${VAULT_HOME}/ -maxdepth 1 -name "*.hcl" |wc -l |tr -d ' ')
  if [ $hcl_count -ne 0 ]; then
    cp "${VAULT_HOME}/"*.hcl "${TMP_BACKUP_DIR}"
    echo "done."
  else
    echo "no files found."
  fi

  ### Backup $VAULT_HOME/storage
  echo -n "Backing up ${VAULT_HOME}/storage/... "
  if [[ -d "${VAULT_HOME}/storage/" ]]; then
    cp -R "${VAULT_HOME}/storage/"* "${TMP_BACKUP_DIR}/storage"
    echo "done."
  else
    echo "no storage directory found."
  fi

# check to see if VAULT was dumped correctly
if [ -d "$TMP_BACKUP_DIR" ]; then

	# if file name is set to nothing then make it todays date
	if [ "$FILE_NAME" == "" ]; then
		FILE_NAME="$TODAYS_DATETIME"
	fi

    cp $RESTORE_SCRIPT_PATH $TMP_BACKUP_DIR/restore.sh
    chmod +x $TMP_BACKUP_DIR/restore.sh

    # replace DATE with todays date in the filename
    FILE_NAME="${FILE_NAME//DATE/$TODAYS_DATETIME}"

    # turn dumped files into a single tar file
#    cd $TMP_BACKUP_DIR
    $TAR_BIN_PATH --remove-files -czf $BACKUP_PATH/$FILE_NAME.tar.gz $TMP_BACKUP_DIR >> /dev/null

    # verify that the file was created
    if [ -f "$BACKUP_PATH/$FILE_NAME.tar.gz" ]; then
      echo "=> Success: `du -sh $FILE_NAME.tar.gz`"; echo;

      if [ -d "$TMP_BACKUP_DIR" ]; then
        rm -rf "$TMP_BACKUP_DIR"
      fi

      ( cd $BACKUP_PATH ; ls -1tr | head -n -$NUMBER_OF_BACKUPS_TO_KEEP | xargs -d '\n' rm -f )

      if [[ ! -z $S3_BUCKETNAME ]]; then

        echo "=> In progress: Uploading to S3"; echo;
        echo s3cmd put $BACKUP_PATH/$FILE_NAME.tar.gz s3://$S3_BUCKETNAME/
        s3cmd put $BACKUP_PATH/$FILE_NAME.tar.gz s3://$S3_BUCKETNAME/
        echo "=> command executed"

      fi
      exit 0
    else
        echo "!!!=> Failed to create backup file: $BACKUP_PATH/$FILE_NAME.tar.gz"; echo;
        exit 1
    fi
    else
	echo; echo "!!!=> Failed to backup Vault"; echo;
	exit 1
	fi
    else

	echo "!!!=> Failed to create backup path: $BACKUP_PATH"
	exit 1

fi
